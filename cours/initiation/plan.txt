1. Séance d'introduction
	- Présentation du plan de cours  
	- Les éléments essentiels d'Internet et du Web
		+ Les Protocoles
			* TCP/IP
			* HTTP(S)
			* FTP
			* etc.
		+ Adresse IP
		+ URL
		+ Serveur & Client
	- Les langages fondamentaux du Web
		+ HTML
		+ CSS
		+ Javascript
	- Choisir un éditeur de texte (VSCode)
		+ Prévisualiser en direct grâce aux extensions
		+ Être efficace avec son éditeur par les raccourcis clavier
	- La compréhension de l'anglais... compétence inévitable.
	- Les références à conserver
        - [Historique CSS — Old CSS, New CSS (anglais seulement)](https://eev.ee/blog/2020/02/01/old-css-new-css/)
		- [Glossaire MDN](https://developer.mozilla.org/fr/docs/Glossaire)
		- [Comprendre les URL et leur structure](https://developer.mozilla.org/fr/docs/Apprendre/Comprendre_les_URL)
		- [Visual Studio Code — Tips & Tricks (anglais seulement)](https://code.visualstudio.com/docs/getstarted/tips-and-tricks)
2. La syntaxe du langage HTML
	- Les balises
		- Ouvrantes & fermantes, Auto-fermantes
		- Exemples typiques
		- Les commentaires
	- Les attributs
		- Leurs rôles et leur importance
		- Exemples typiques
			+ src
			+ id (ancrages)
			+ href
			+ etc.
		- Exceptions : les attributs booléens
	- La structure essentielle d'une page Web
		- Doctype + html > head + body
	- Les informations d'entête (head)
		- Title
		- Metas de base (*charset*, author, description)
		- CSS & Script
	- L’encodage & les entités de caractère
	- Le cas W3Schools.
	- Les références à conserver
		+ [HTML: The Living Standard — Introduction (anglais seulement)](https://html.spec.whatwg.org/dev/introduction.html)
		+ [Référence des éléments HTML](https://developer.mozilla.org/fr/docs/Web/HTML/Element)
		+ [Référence des attributs HTML](https://developer.mozilla.org/fr/docs/Web/HTML/Attributs)
		+ [Les attributs universels](https://developer.mozilla.org/fr/docs/Web/HTML/Attributs_universels)
		+ [Commencer avec le HTML](https://developer.mozilla.org/fr/docs/Apprendre/HTML/Introduction_%C3%A0_HTML/Getting_started)
		+ [Qu'avez-vous dans la tête ? Métadonnées en HTML](https://developer.mozilla.org/fr/docs/Apprendre/HTML/Introduction_%C3%A0_HTML/The_head_metadata_in_HTML)
		+ [Liste des entités de caractères](https://fr.wikipedia.org/wiki/Liste_des_entit%C3%A9s_de_caract%C3%A8re_de_XML_et_HTML)
	- Exercice : ma première page
		- Texte balisé
3. Les éléments de contenu du langage HTML
	- Retour sur l'exercice précédent
	- Les titres
		+ h1... h6
	- Le texte
		+ p, em, strong
		+ span
	- Les listes
		+ ul, ol, dl
	- Les images
		+ Les chemins vers la source
		+ Attribut « src »
			* formulation absolue & relative
		+ Attribut « alt »
			* Décrire en cas d'impossibilité de visualiser
	- Les hyperliens
		+ Attribut « href »
			* formulation absolue & relative
			* Les liens intra-page vers des ancres (id)
		+ Attribut « target »
			* Plusieurs façons de gérer l'ouverture des liens
	- Les références à conserver
		+ [Les catégories de contenu](https://developer.mozilla.org/fr/docs/Web/Guide/HTML/Cat%C3%A9gories_de_contenu)
		+ [Kinds of content (anglais seulement)](https://html.spec.whatwg.org/multipage/dom.html#kinds-of-content)
		+ [Les éléments de titre de section](https://developer.mozilla.org/fr/docs/Web/HTML/Element/Heading_Elements)
		+ [The elements of HTML (anglais seulement)](https://html.spec.whatwg.org/multipage/semantics.html)
	- Exercice : Fiche de recette
4. Les éléments de structure du langage HTML
	- Retour sur l'exercice précédent
	- Pourquoi structurer le contenu HTML ?
	- La balise de structure générique « div »
	- Les balises et leur utilisation
		+ Les balises de structure générale
			* header, main, footer
				- Les header et footer ne peuvent contenir de header ou footer
				- la balise main se doit d'être unique.
		+ Les balises de structure sectionnelle
			* article, aside, section, figure, nav
	- La sémantique structurelle du HTML
		- Le schéma décisionnel
	- La validation du HTML
		- Pourquoi valider notre HTML ?
		- Comment utiliser le validateur du W3C
	- Les bonnes pratiques
		+ Tenter de garder les mêmes types d'éléments sous un même niveau (p. ex. ne pas mélanger <p></p> et <section></section> sous un même nœud)
		+ Minimiser la quantité de balises, ne pas sur-envelopper nos éléments (toujours le moins de code possible !).
	- Les références à conserver
		+ [Structures et sections d'un document HTML5](https://developer.mozilla.org/fr/docs/Web/HTML/Sections_and_Outlines_of_an_HTML5_document)
		+ [Sections (anglais seulement)](https://html.spec.whatwg.org/multipage/sections.html)
		+ [HTML5 Sectioning Element Flowchart (anglais seulement)](http://html5doctor.com/downloads/h5d-sectioning-flowchart.pdf)
		+ [How to Section Your HTML (anglais seulement)](https://css-tricks.com/how-to-section-your-html/)
	- Exercice : Fiche de recette sémantiquement structurée
		- Structurer sémantiquement et valider la fiche de recette
5. Les navigateurs, l'accessibilité et les outils de développement
	- Retour sur l'exercice précédent
	- Les différents navigateurs
		- Pourquoi est-il important de maîtriser chaque navigateur ?
		- ~~Les 3 moteurs de rendu populaires.~~ __(manque de temps !)__
			- Chromium (Chrome, Edge, Opera)
			- Webkit (Safari Mac & iOS)
			- Gecko (Firefox)
		- Les outils de développement (devTools)
			- ~~Survol du fonctionnement de chacun~~ __(manque de temps !)__
			- Présentation de l'onglet « élément »
			- Utilisation de l'inspecteur
		- L'accessibilité
			- Pourquoi assurer l'accessibilité ?
			- Les normes de l'accessibilité
				- Au Québec et en Ontario
			- ~~ARIA et ses rôles~~ __(manque de temps !)__
			- Évaluer l'accessibilité des pages Web
				- Installation de l'extension AXE
				- Explication de son fonctionnement
	- Les références à conserver
		+ __Standard WCAG 2.0__
			* [Règles pour l'accessibilité des contenus Web (WCAG) 2.0](https://www.w3.org/Translations/WCAG20-fr/)
			* [Référence rapide avec exemples (anglais seulement)](https://www.w3.org/WAI/WCAG21/quickref/)
		+ __Introductions__
			* [Wiki — Accessibilité du Web](https://fr.wikipedia.org/wiki/Accessibilit%C3%A9_du_web)
			* [Introduction à l'accessibilité sur le Web (anglais seulement)](https://webaim.org/intro/)
		+ __Normes provinciales__
			* [Règles d'accessibilité des sites publics de l'Ontario](https://www.ontario.ca/fr/page/comment-rendre-les-sites-web-accessibles)
			* [Règles d'accessibilité des sites publics du Québec](https://www.tresor.gouv.qc.ca/ressources-informationnelles/architecture-dentreprise-gouvernementale/standards-et-normes/accessibilite-du-web/)
		+ __Organismes et communautés__
			* [WAI — Web Accessibility Initiative (anglais seulement)](https://www.w3.org/WAI/)
			* [A11yproject — Communauté de promotion de l'accessibilité Web  (anglais seulement)](https://a11yproject.com/)
		+ __Validation__
			* [Axe — Extension de validation des règles d'accessibilité](https://www.deque.com/axe/axe-for-web/)
			* [Wave — Extension de validation](https://wave.webaim.org/extension/)
			* [Outil en ligne de validation de l'accessibilité](https://achecker.ca/checker/index.php)
			* [Liste d'outils de validation de l'accessibilité](https://www.w3.org/WAI/ER/tools/)
		+ __Lecteurs d'écran__
			* [Freedom Scientific — Fabricant du lecteur d'écran « JAWS »](https://www.freedomscientific.com/)
			* [NVAccess — Fabricant du lecteur d'écran NVDA](https://www.nvaccess.org/)
		+ __Techniques & tutoriels__
			* [Comment masquer du contenu visuellement de manière accessible ? (anglais seulement)](https://a11yproject.com/posts/how-to-hide-content/)
			* [Web Accessibility Tutorials (anglais seulement)](https://www.w3.org/WAI/tutorials/)
			* [Document Outline Dilemma (anglais seulement)](https://css-tricks.com/document-outline-dilemma/)
			* [12 Screen Reader Facts for Accessible Web Design (anglais seulement)](https://designmodo.com/screen-reader-accessible-design/)
			* [5 most annoying website features I face as a blind person every single day (anglais seulement)](https://bighack.org/5-most-annoying-website-features-i-face-as-a-blind-screen-reader-user-accessibility/)
		+ __ARIA (Accessible Rich Internet Applications)__
			* [ARIA](https://developer.mozilla.org/fr/docs/Accessibilit%C3%A9/ARIA)
			* [ARIA Roles (anglais seulement)](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles)
	- Exercice : rendre un article de blog accessible et valide (WCAG 2.0)
6. Examen pratique
	- Retour sur l'exercice précédent
	- Examen : Baliser un article de journal (2h) 10%
		- Structure sémantique valide et accessible
	- Quiz de révision #1 (recherche à faire à la maison) 10%
7. Énoncé TP #1 & Introduction au CSS
	- Remise du quiz de révision #1
	- Retour sur l'examen pratique
	- TP #1 : Baliser et styliser une page Web personnelle 20%
	- Le langage CSS
        - Styliser et composer du contenu HTML.
        - Un langage vivant, en constante évolution.
		- Pourquoi C(ascading)S(tyle)S(heets) ?
		- Les « feuilles de style » (S.S.)
			- La séparation du fond et de la forme
			- Indépendantes
			- Multiples
			- Organisées
		- La « cascade » (C.)
			- L'application des styles par le navigateur
				- Les styles par défaut du navigateur
				- La balise « link »
				- L'instruction @import
				- L'ordre dans les fichiers
				- L'attribut « style »
				- Le mot-clé « !important »
				- Les préférences de l'usager
        - L'héritage & la spécificité
		- La sélection simple
			- Les sélecteurs de balises
			- La sélection complexe
    - Les références à conserver
        + [Wiki CSS — Historique, enjeux, principes, etc.](https://fr.wikipedia.org/wiki/Feuilles_de_style_en_cascade)
        + [Qu'est-ce que CSS ?](https://developer.mozilla.org/fr/docs/Learn/CSS/First_steps/Qu_est_ce_que_CSS)
        + [Les bases du CSS](https://developer.mozilla.org/fr/docs/Apprendre/Commencer_avec_le_web/Les_bases_CSS)
        + [Introducing the CSS Cascade](https://developer.mozilla.org/en-US/docs/Web/CSS/Cascade)
        + [Cascade et héritage](https://developer.mozilla.org/fr/docs/Apprendre/CSS/Building_blocks/Cascade_et_heritage)
        + [Termes et définitions CSS](https://la-cascade.io/termes-et-definitions-css/)
        + [Référence CSS](https://developer.mozilla.org/fr/docs/Web/CSS/Reference)
        + [Validateur CSS](https://jigsaw.w3.org/css-validator/)
        + [CSS Zen Garden](http://www.csszengarden.com/)
8. Ergonomie pour le Web
	- Ergonomie : utile & utilisable
		- L'utilité : pourquoi notre page existe-t-elle ?
			- Notion de besoin
			- Objectif à atteindre
		- L'utilisabilité : favoriser l'efficacité de la satisfaction
			+ Définition selon la norme ISO 9241 :  « L’utilisabilité est le degré selon lequel un produit peut être utilisé par des utilisateurs identifiés, pour atteindre des buts définis avec efficacité, efficience et satisfaction, dans un contexte d’utilisation spécifié. »
			- Simplicité
				+ Ne contient que ce dont on a besoin.
					* [Viget](https://www.viget.com/)
					* [Happy Cog](https://www.happycog.com/)
					* [Deux Huit Huit](https://deuxhuithuit.co)
					* [~~University of Advanced Technology~~](https://www.uat.edu/)
					- [~~Locomotive~~](https://locomotive.ca/)
			- Hiérarchie
				+ Des niveaux de priorités et de taxonomie sont établis.
					* [Musée des Beaux-Arts de Montréal](https://www.mbam.qc.ca/fr/)
					* [Santé Montérégie](https://santemonteregie.qc.ca/)
					* [~~Leicester~~](https://www.leicesterma.org/)
					* [~~Arngren~~](http://arngren.net/)
			- Navigabilité
				+ L'utilisateur peut parcourir efficacement l'éventail de contenus
					- [Biron](https://biron.com)
					- [Santé Montérégie](https://santemonteregie.qc.ca/)
					* [~~Arngren~~](http://arngren.net/)
			- Constance
				+ Les codes demeurent d'une page à l'autre. Évite les surprises.
					* [~~Arngren~~](http://arngren.net/)
			- Familiarité
				+ Ressemble à ce qu'on connaît. Intègre des symboles, applique des codes reconnus. 
					- [NN Group](https://www.nngroup.com/)
					- [~~Locomotive~~](https://locomotive.ca/)
			- Universalité
				+ Peut être compris de tous
					- [Santé Montérégie](https://santemonteregie.qc.ca/)
					- [~~Locomotive~~](https://locomotive.ca/)
			- Fonctionnalité
				+ Présente les moyens nécessaires à la satisfaction.
					- [Wildlife Photographer of the Year](https://www.nhm.ac.uk/wpy/)
					- [Casper](https://casper.com/ca/fr/)
			- Fiabilité
				+ Le système répondra de manière correcte et les erreurs de l'utilisateur sont pardonnées.
			- Efficience
				+ Atteindre sa satisfaction avec le moins de ressources possible.
					- [Santé Montérégie](https://santemonteregie.qc.ca/)
	- Utile & utilisable mais pour qui ?
		- Conception en fonction de l'utilisateur
			- Quels sont ses objectifs, ses enjeux ?
			- Quel âge a-t-il ?
			- Quelle est son attitude, son humeur ?
			- Quel est son degré de proficience technologique ?
            - À quelle fréquence visite-t-il le site ?
            - Quel est son contexte de visite ?
            - Quel(s) appareil(s) utilise-t-il ?
            - Quelles applications est-il sujet à utiliser ?
		- Création d'un « persona »
	- Prendre les décisions difficiles en fonction de sa base d'utilisateurs et du contexte d'utilisation
		- Devrais-je utiliser une structure de titres (h1... h6) absolue ou relative ?
		- Devrais-je investir dans une accessibilité plus poussée ?
	* Exemples
		- [Audubon](https://www.audubon.org/)
		- [NN Group](https://www.nngroup.com/)
		- [Wildlife Photographer of the Year](https://www.nhm.ac.uk/wpy/)
			+ Fonctionnalité
		- [A2Dominion](https://a2dominion.co.uk/)
			+ Simplicité
		- [Work.co](https://work.co/)
		- [Pentagram](https://www.pentagram.com/)
			+ Simplicité
		- [Locomotive](https://locomotive.ca/)
		- [Deux Huit Huit](https://deuxhuithuit.co)
			+ Simplicité
		- [Bewegen](https://bewegen.com/fr)
		- [Biron](https://biron.com)
			+ Hiérarchie
			+ Navigabilité
		- [Viget](https://www.viget.com/)
		- [Santé Montérégie](https://santemonteregie.qc.ca/)
			+ Hiérarchie
			+ Navigabilité
		- [Musée des Beaux-Arts de Montréal](https://www.mbam.qc.ca/fr/)
			+ Hiérarchie
			+ Navigabilité
		- [Huge inc](https://www.hugeinc.com/)
		- [Austin Chamber](https://www.austinchamber.com/)
		- [Ueno](https://ueno.co/)
		- [Oscar](https://www.hioscar.com/)
			+ Simplicité
		- [Casper](https://casper.com/ca/fr/)
			+ Fonctionnalité
		- [Wealthsimple](https://www.wealthsimple.com/)
			+ Simplicité
	- Les références à conserver
		+ [Wiki Ergonomie](https://fr.wikipedia.org/wiki/Ergonomie_informatique)
		+ [Définition utilisabilité ou usabilité](https://www.usabilis.com/definition-utilisabilite-usabilite/)
		+ [Usability 101: Introduction to Usability (anglais seulement)](https://www.nngroup.com/articles/usability-101-introduction-to-usability/)
		+ [9 Guidelines for Exceptional Web Design, Usability, and User Experience (anglais seulement)](https://blog.hubspot.com/blog/tabid/6307/bid/30557/6-guidelines-for-exceptional-website-design-and-usability.aspx)
		+ [Ten usability heuristics (anglais seulement)](https://www.nngroup.com/articles/ten-usability-heuristics/)
		+ [Information and Information Architecture: The Big Picture (anglais seulement)](https://www.smashingmagazine.com/2020/07/information-architecture-big-picture/)
		+ [Wiki Persona](https://fr.wikipedia.org/wiki/Persona_(ergonomie))
		+ [Personas vs. Jobs-to-be-done (anglais seulement)](https://www.nngroup.com/articles/personas-jobs-be-done/)
		+ [Personas Make Users Memorable for Product Team Members (anglais seulement)](https://www.nngroup.com/articles/persona/)
        + [Apprendre à construire des personas](https://www.weloveusers.com/partage/cours/apprendre-personas.html)
		+ [Why Personas Fail](https://www.nngroup.com/articles/why-personas-fail/)
		+ [FlowMapp (anglais seulement)](https://app.flowmapp.com/)
		+ [False Simplicity in UI Design: Simple is not always better (anglais seulement)](https://tomkenny.design/articles/false-simplicity)
		+ [Baymard Institute (anglais seulement)](https://baymard.com/)
		+ [Laws of UX (anglais seulement)](https://lawsofux.com/)
	- Exercice : construire le(s) persona(s) types de votre page Web personnelle.
9. La communication graphique pour le Web
	- Les éléments (le langage graphique)
		- La palette de couleur
			- Les jeux chromatiques
            - La psychologie
			- Les propriétés et fonctions de couleur CSS
		- Le choix des polices de caractères
			- Les jeux typographiques
			- Les propriétés et instructions de fontes CSS
		- L'échelle typographique
			- Les niveaux de lecture
			- Les propriétés typographiques CSS
		- L'échelle rythmique
			- Les espacements
			- Les propriétés d'espacement CSS
		- Les dimensions
			- La grille et la composition
			- Les propriétés de dimension CSS
	- Les principes (règles et considérations) __MANQUE DE TEMPS !__
		- La lisibilité
		- Le contraste
		- La hiérarchisation
		- L'alignement
		- La cohérence
		- L'harmonie
		- L'équilibre
		- La « gestalt » __MANQUE DE TEMPS !__
	- Exemples
		- [Welsh Rarebits Demo](https://stuffandnonsense.co.uk/content/demo/welsh-rarebits/index.html)
	- Références à conserver
        * __La couleur__
            - [Color Theory (anglais seulement)](https://en.wikipedia.org/wiki/Color_theory)
            - [Itten's Color Contrasts (anglais seulement)](https://worqx.com/color/itten.htm)        
            * [Adobe Color — outil de création de palettes](https://color.adobe.com/fr/create/color-wheel)
            * [Coolors — générateur de palettes](https://coolors.co/)
            * [Colormind — Générateur algorithmique avec exemples d'application](http://colormind.io/)
        * __La typographie__
            + [Typewolf (anglais seulement)](https://www.typewolf.com/)
            + [Typographica (anglais seulement)](https://typographica.org/on-typography/typeface-selection-resources/)
            + [FontPair — bibliothèque de combinaisons typographiques (anglais seulement)](https://fontpair.co/)
            + [FontsInUse (anglais seulement)](https://fontsinuse.com/)
            + [18 Rules for Using Text (anglais seulement)](https://thevisualcommunicationguy.com/2014/07/01/18-rules-for-using-text/)
            - [How to Structure an effective Typographic Hierarchy (anglais seulement)](https://www.toptal.com/designers/typography/typographic-hierarchy)
            - [Type Scale — Outil de création d'échelles typographiques (anglais seulement)](https://type-scale.com/)
            - [Les Do's and Don'ts de la typographie](https://la-cascade.io/dos-donts-de-la-typographie/)
            - [Google Fonts — Bibliothèque de polices gratuites](https://fonts.google.com/)
		- __Principes de conception (graphique)__
            * [The Power of Good Design (anglais seulement)](https://www.vitsoe.com/gb/about/good-design)
            * [Principles of design (anglais seulement)](https://www.invisionapp.com/design-defined/principles-of-design/)
            * [5 Principles of Visual Design in UX (anglais seulement)](https://www.nngroup.com/articles/principles-visual-design/)
            + [12 critères de hiérarchie visuelle](http://kingkom.net/12-criteres-hierarchie-visuelle/)
        - __Théorie de la Gestalt__
            - [Gestalt principles in UI design (anglais seulement)](https://medium.muz.li/gestalt-principles-in-ui-design-6b75a41e9965)
            - [Définition théorie de la gestalt ou lois de la gestalt](https://www.usabilis.com/definition-theorie-de-gestalt/)
            * [The principle of Common Region (anglais seulement)](https://www.nngroup.com/articles/common-region/)
            * [Similarity principle in visual design (anglais seulement)](https://www.nngroup.com/articles/gestalt-similarity/)
            * [Proximity principle in Visual Design (anglais seulement)](https://www.nngroup.com/articles/gestalt-proximity/)
	- Exercice : à l'aide de l'inspecteur, reconstituez le langage graphique de l'exemple donné
10. Appliquer une feuille de styles à une page HTML
	- Retour sur l'exercice précédent
	- Retour sur la liaison de feuilles de style à une page HTML
	- Les styles par défaut du navigateur
		+ Les éléments principalement affectés
		+ CSS Reset
		+ CSS Normalize
		+ Devrait-on utiliser une librairie de styles par défaut ?
	- La sélection des éléments : les types de sélecteurs et leur spécificité
		- Retour sur la sélection simple et complexe
		- Les sélecteurs simples
			- Classe
			- Identifiant
			- Attribut
		- Les pseudo-classes
			- Survol
			- Focus
			- Activé
			- Visité
			- Premier enfant
			- etc.
		- La combinaison
			- Descendant
			- Enfant
			- Successeur
			- Voisin adjacent
		- Les sélecteurs multiples
		- Exemples de sélecteurs complexes
			- Attention à la spécificité !
			- Plus un sélecteur est spécifique, le moins de propriétés devrait-il appliquer !
	+ Les leçons à tirer
		- Ne pas être doctrinaire. Rien n'est absolu. Toujours relatif au projet.
		- Tout le monde a son opinion
		- Intégrer du code incompris peut jouer des tours.
		- Mieux vaut ne pas solutionner des problèmes futurs.
		- Les sélecteurs devraient réfléter les intentions.
		- Responsabilité unique.
		- Concevoir l'application des styles en couches (oignon).
	- Les références à conserver
		+ __Librairies de démarrage CSS__
			+ [Normalize.css](https://github.com/necolas/normalize.css/)
			+ [Reset CSS](https://meyerweb.com/eric/tools/css/reset/)
		+ __À propos des librairies de démarrage__
			* [Reboot, Resets & Reasoning (anglais seulement)](https://css-tricks.com/reboot-resets-reasoning/)
			* [A Modern CSS Reset (anglais seulement)](https://dev.to/hankchizljaw/a-modern-css-reset-6p3)
			* [User Agent Style Sheets: Basics and Samples (anglais seulement)](https://meiert.com/en/blog/user-agent-style-sheets/)
			* [Why “Reset” Style Sheets Are Bad (anglais seulement)](https://meiert.com/en/blog/reset-style-sheets-are-bad/)
			* [Stop Using Resets: Visual Examples of the Practical Nonsense of Resets and Normalizers (anglais seulement)](https://meiert.com/en/blog/stop-using-resets/)
		+ __Références des éléments de sélection CSS__
			* [Sélecteurs CSS](https://developer.mozilla.org/fr/docs/Web/CSS/S%C3%A9lecteurs_CSS)
			* [Pseudo-éléments](https://developer.mozilla.org/fr/docs/Web/CSS/Pseudo-%C3%A9l%C3%A9ments)
			* [Pseudo-classes](https://developer.mozilla.org/fr/docs/Web/CSS/Pseudo-classes)
		+ __Approches stylistiques en CSS__
			* [Semantic CSS With Intelligent Selectors (anglais seulement)](https://www.smashingmagazine.com/2013/08/semantic-css-with-intelligent-selectors/)
			* [The single responsibility principle applied to CSS (anglais seulement)](https://csswizardry.com/2012/04/the-single-responsibility-principle-applied-to-css/)
			* [CSS Inheritance, The Cascade And Global Scope: Your New Old Worst Best Friends (anglais seulement)](https://www.smashingmagazine.com/2016/11/css-inheritance-cascade-global-scope-new-old-worst-best-friends/)
			* [CSS Guidelines (anglais seulement)](https://cssguidelin.es/)
	- Exercice : appliquer le langage graphique donné à la structure HTML fournie tout en tentant de minimiser la spécificité
11. Atelier
	- Retour sur l'exercice précédent
	- Production du TP #1
12. Les éléments HTML à usage particulier
	- Remise du TP #1
	- Les formulaires et leurs champs
	- Les tableaux
	- Les médias vidéo et sonore
	- Références à conserver
		+ __Les fomulaires__
			+ [Les éléments de formulaire](https://developer.mozilla.org/fr/docs/Web/HTML/Element#Formulaires)
			+ [Mon premier formulaire HTML](https://developer.mozilla.org/fr/docs/Web/Guide/HTML/Formulaires/Mon_premier_formulaire_HTML)
			+ [Comment structurer un formulaire HTML](https://developer.mozilla.org/fr/docs/Web/Guide/HTML/Formulaires/Comment_structurer_un_formulaire_HTML)
			+ [Les blocs de formulaires natifs](https://developer.mozilla.org/fr/docs/Web/Guide/HTML/Formulaires/Les_blocs_de_formulaires_natifs)
			+ [Validation des données de formulaires](https://developer.mozilla.org/fr/docs/Web/Guide/HTML/Formulaires/Validation_donnees_formulaire)
		- __Les tableaux__
			+ [L'élément de tableau](https://developer.mozilla.org/fr/docs/Web/HTML/Element/table)
			+ [Tableaux HTML : notions de base](https://developer.mozilla.org/fr/docs/Apprendre/HTML/Tableaux/Basics)
			+ [Tableaux HTML : dispositions avancées et accessibilité](https://developer.mozilla.org/fr/docs/Apprendre/HTML/Tableaux/Advanced)
			+ [A Complete Guide to the Table Element (anglais seulement)](https://css-tricks.com/complete-guide-table-element/)
		- __Les balises `<audio>` & `<video>`__
			+ [Contenu audio et vidéo](https://developer.mozilla.org/fr/docs/Apprendre/HTML/Multimedia_and_embedding/Contenu_audio_et_video)
			+ [`<audio>` : l'élément audio embarqué](https://developer.mozilla.org/fr/docs/Web/HTML/Element/audio)
			+ [`<video>`](https://developer.mozilla.org/fr/docs/Web/HTML/Element/video)
	- Exercice : recréer le formulaire présenté dans la maquette donnée 
13. L'organisation d'un site Web
	- Retour sur le TP #1
	- Retour sur l'exercice précédent
	- La structure de contenu d'un site Web
		- Pourquoi structurer & organiser les sites ?
		- Plusieurs pages pour plusieurs sujets
			- Comment nomme-t-on une page ?
				+ Être représentatif de l'essence sujet
				+ Être le plus court possible
				+ Éviter les articles et marqueurs de relation
				+ Normaliser les caractères (pas d'espaces, ni d'accent)
			- index.html vs. sujet.html
		- Hiérarchiser pour mieux rassembler
			- Quand hiérarchiser ?
			- Comment nomme-t-on les dossiers ?
				+ voir « Comment nomme-t-on une page ? » ci-haut
			- La hiérarchisation statique vs. dynamique
		- La navigation entre les pages
			- La balise « nav »
			- Les méthodes de création d'un menu
				+ En liste, en structure étagée ou plate
		- L'arborescence : une représentation modèle du site Web
			- Communiquer aux intervenants l'envergure
			- Valider que tout le contenu est pris en compte
			- Visualiser les relations entre les contenus
	- Les références à conserver
		+ [Architecture de l'information](https://fr.wikipedia.org/wiki/Architecture_de_l%27information)
		+ [Flat vs. Deep Website Hierarchies (anglais seulement)](https://www.nngroup.com/articles/flat-vs-deep-hierarchy/)
		+ [Semantic navigation with the nav element (anglais seulement)](http://html5doctor.com/nav-element/)
		+ [Navigation in Lists: To Be or Not To Be (anglais seulement)](https://css-tricks.com/navigation-in-lists-to-be-or-not-to-be/)
		+ [The `<nav>` element (anglais seulement)](https://html.spec.whatwg.org/multipage/sections.html#the-nav-element)
		+ [FlowMapp — outil de stratégie UX (anglais seulement)](https://app.flowmapp.com/)
		+ [Octopus — Créateur d'arborescence (anglais seulement)](https://octopus.do/)
	- Exercice : organiser le site d'un restaurant
14. Le modèle de boîte CSS
	- Retour sur l'exercice précédent
	- Les rectangle : le bloc fondamental de tout affichage Web
	- L'importance primordiale du modèle de boîte CSS
	- Les propriétés du modèle de boîte et leurs interactions
		- width & height
		- margin
		- padding
		- border
	- Les rôles d'affichage de base
		- inline
		- block
		- inline-block
	- La propriété « box-sizing » : modifier le modèle de boîte
	- La propriété « overflow » : quand les enfants dépassent le parent
	- La fusion des marges
	- Le modèle de boîte dans les outils de développement
	- Les références à conserver
		+ [Le modèle de boîte](https://developer.mozilla.org/fr/docs/Apprendre/CSS/Building_blocks/Le_modele_de_boite)
		+ [Référence des propriétés du modèle de boîte](https://developer.mozilla.org/fr/docs/Web/CSS/Mod%C3%A8le_de_bo%C3%AEte_CSS)
		+ [Maîtriser la fusion des marges](https://developer.mozilla.org/fr/docs/Web/CSS/Mod%C3%A8le_de_bo%C3%AEte_CSS/Fusion_des_marges)
		+ [CSS Box Model — Working Draft (anglais seulement)](https://www.w3.org/TR/css-box-3/)
	- Exercice : à l'aide des propriétés du modèle de boîte, répliquer la maquette donnée
15. Les stratégies de positionnement CSS simples
	- Retour sur l'exercice précédent
	- Énoncé TP #2
	- Le flot normal du contenu HTML & CSS
	- La propriété « float » : associer contenu principal et complémentaire
	- La propriété « position » et ses valeurs : modifier le flot normal
		- static
		- relative
		- absolute
		- fixed
		- sticky
	- Les interactions de position entre parent et enfants
	- Les propriétés de déplacement et leur fonctionnement
	- Les références à conserver
	- Exercice : à l'aide des propriétés de positionnement, répliquer la maquette donnée
16. La composition et le concept de grille
	- Les compositions Web : disposer nos éléments selon nos intentions
		- Exemples de compositions notoires
		- Les grilles derrière celles-ci
	- Historique de la grille en communication graphique
	- Pourquoi disposer les éléments sur une grille ?
		+ Armature
	- Éléments de la grille
		- Colonnes
		- Rangées
		- Gouttières
	- Développer une grille en CSS
		- Plusieurs façons de faire
		- Les méthodes modernes
	- Le rôle d'affichage flexbox
		- Les propriétés pour le « parent »
		- Les propriétés pour les « enfants »
	- Une méthode flexbox de création de grilles
		- Enfants avec marges à la gauche et en haut 
		- Parent avec marges négatives compensatoires
		- Flex-basis avec calc() en fonction du nombre de colonnes
	- Références à conserver
		+ [Flexbox](https://developer.mozilla.org/fr/docs/Apprendre/CSS/CSS_layout/Flexbox)
		+ [Les concepts de base pour Flexbox](https://developer.mozilla.org/fr/docs/Web/CSS/CSS_Flexible_Box_Layout/Concepts_de_base_flexbox)
		+ [A Comprehensive Introduction to Grids in Web Design (anglais seulement)](https://webdesign.tutsplus.com/articles/a-comprehensive-introduction-to-grids-in-web-design--cms-26521)
		+ [Grids Are Good (anglais seulement)](http://www.thegridsystem.org/pdf/grids_are_good.pdf)
		+ [Flexbox Grid Finesse (anglais seulement)](https://heydonworks.com/article/flexbox-grid-finesse/)
		+ [Building Better Layout Designs with Layout Grids (anglais seulement)](https://www.smashingmagazine.com/2017/12/building-better-ui-designs-layout-grids/)
	- Exercice : développer selon la méthode flexbox la grille présentée sur la maquette fournie
17. La grille et ses adaptations 
	- Retour sur l'exercice précédent
	- Adapter nos pages Web et leur composition : les « media queries »
		- Présentation de l'instruction @media
		- Les requêtes les plus importantes
		- Survol rapide des requêtes secondaires
	- Adapter une grille en étapes, avec points de rupture (adaptative)
	- Laisser une grille se rétracter et se déployer selon son contenu (fluide)
		- Les propriétés « min-width » et « max-width »
		- Les propriétés « flex-grow » et « flex-shrink »
	- Références à conserver
		+ [Material Design — Responsive Layout Grid (anglais seulement)](https://material.io/design/layout/responsive-layout-grid.html)
		+ [The Different Kinds of CSS Layouts (anglais seulement)](https://css-tricks.com/guides/layout/)
		+ [Don't Overthink It (Flexbox) Grids (anglais seulement)](https://css-tricks.com/dont-overthink-flexbox-grids/)
		+ [Better, Simpler Grid Systems (anglais seulement)](https://philipwalton.github.io/solved-by-flexbox/demos/grids/)
		+ [The Flexbox Holy Albatross (avancé & anglais seulement)](https://heydonworks.com/article/the-flexbox-holy-albatross/)
		+ [Responsive Design](https://developer.mozilla.org/fr/docs/Apprendre/CSS/CSS_layout/Responsive_Design)
		+ [Media Queries (Requêtes média)](https://developer.mozilla.org/fr/docs/Web/CSS/Requ%C3%AAtes_m%C3%A9dia)
	- Exercice : Adapter une grille de manière fluide puis adaptative
18. Atelier de production
	- Retour sur l'exercice précédent
	- Intégrer une composition complète à l'aide de grilles fluides et/ou adaptives
19. Interactivité, transformations et transitions
	- Retour sur l'atelier précédent
	- Les rôles des l'interactivité en conception Web
	- Les pseudo-classes : piliers de l'interactivité CSS
		- Retour rapide sur les pseudo-classes
		- Exemples d'interfaces réactives
	- Les transformations : changer l'apparence des éléments
	- Les transitions : pour des interactions fluides
		- Fonctionnement des transitions
			- État initial vers état final
		- Propriétés associées aux transitions
		- Propriétés « transitionnables »
		- Opter pour les transformations pour une performance accrue
		- Cibler strictement les propriétés désirées pour un résultat mieux contrôlé.
	- Les références à conserver
		- [MDN — Transform](https://developer.mozilla.org/fr/docs/Web/CSS/CSS_Transforms)
		* [MDN — Utiliser les transformations](https://developer.mozilla.org/fr/docs/Web/CSS/CSS_Transforms/Utilisation_des_transformations_CSS)
		* [MDN — Les fonctions de transformation](https://developer.mozilla.org/fr/docs/Web/CSS/transform-function)
		* [MDN — Transition](https://developer.mozilla.org/fr/docs/Web/CSS/transition)
		* [MDN — Utiliser les transitions CSS](https://developer.mozilla.org/fr/docs/Web/CSS/CSS_Transitions/Utiliser_transitions_CSS)
	- Exercice : ajoutez des transitions interactives sur l'exercice précédent
20. Examen pratique 
	- Retour sur l'exercice précédent
	- Examen : Intégrer l'entête avec menu déroulant depuis une maquette fournie (2h) 10%
21. Retour sur les compositions et leur adaptation
	- Retour sur l'examen précédent
	- Révision du modèle flexbox
	- ~~Survol du rôle d'affichage « grid »~~  __(déjà assez de flexbox ! / À reporter à la deuxième session)__
	- Modèles d'adaptation fréquents
		- La navigation masquée
		- La composition en pile
		- La galerie
		- Le carousel
		- Etc.
	* Références à conserver
		- [Responsive Web Design Patterns (anglais seulement)](https://developers.google.com/web/fundamentals/design-and-ux/responsive/patterns)
		- [Bard Frost — Responsive Patterns & Examples (anglais seulement)](https://bradfrost.github.io/this-is-responsive/patterns.html#unequal-width)
		- [A Brief Overview on Responsive Patterns (anglais seulement)](https://www.smashingmagazine.com/2017/04/overview-responsive-navigation-patterns/)
22. Atelier de production
	- Travail individuel sur le TP #2 et/ou révision
23. Révision HTML
	- Remise du TP #2
	- Les balises et leur rôle
	- La structure et la sémantique
	- L'organisation d'un site
	- La validation et l'accessibilité
	- Quiz #2 (recherche à faire à la maison) 10%
24. Révision CSS
	- Remise du quiz #2
	- Retour sur le TP #2
	- Le modèle de boîte
	- Le positionnement
	- La composition
	- L'adaptation
25. Épreuve finale 20%
